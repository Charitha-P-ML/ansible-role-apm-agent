---
- include_vars: ../config-params.yml
  ignore_errors: true

- name: Generate config
  shell: ./sfagent -generate-config
  args:
    chdir: /opt/sfagent
  ignore_errors: true
  register: generate_config_result

- name: Verify if config-generated.yaml exists
  stat:
    path: /opt/sfagent/config-generated.yaml
  register: config_stat

- name: Display status of config generation
  ansible.builtin.debug:
    msg: "{{ 'Successfully generated config-generated.yaml' if generate_config_result.rc == 0 else 'config-generated.yaml could not be generated' }}"

- name: Copy generated config to config.yaml
  shell: cp config-generated.yaml config.yaml
  args:
    chdir: /opt/sfagent
  when: config_stat.stat.exists and generate_config_result.rc == 0

- name: Display status of copying config file
  ansible.builtin.debug:
    msg: "Successfully copied config-generated.yaml to config.yaml"
  when: config_stat.stat.exists and generate_config_result.rc == 0

- name: Replace values in config file
  ansible.builtin.replace:
    path: /opt/sfagent/config.yaml
    regexp: '{{item.search}}'
    replace: '{{ item.replace }}'
  with_items:
    - { search: "key: CHANGEME" , replace: 'key: {{key | default("")}}' }
    - { search: "appName: CHANGEME" , replace: 'appName: {{appName | default("CHANGEME")}}' }
    - { search: "projectName: CHANGEME" , replace: 'projectName: {{projectName | default("CHANGEME")}}' }
    - { search: "Name: CHANGEME" , replace: 'Name: {{Name | default("CHANGEME")}}' }
    - { search: "Name: $HOSTNAME" , replace: 'Name: {{Name | default("$HOSTNAME")}}' }
